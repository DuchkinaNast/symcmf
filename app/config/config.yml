imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    form_themes:
        - 'SonataFormatterBundle:Form:formatter.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                auto_mapping: true

# Setting for Gedmo
stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            timestampable: true

# Swiftmailer Configuration
swiftmailer:
    default_mailer: nix_mailer
    mailers:
        mailer:
            transport: "%mailer_transport%"
            host:      "%mailer_host%"
            port:      "%mailer_port%"
            username:  "%mailer_user%"
            password:  "%mailer_password%"
            spool:     { type: memory }
        nix_mailer:
            transport: "%mailer_transport%"
            host:      "%mailer_host%"
            port:      "%mailer_port%"
            username:  "%mailer_user%"
            password:  "%mailer_password%"
            spool:     { type: memory }

sonata_block:
    default_contexts: [cms]
    blocks:
        # Enable the SonataAdminBundle block
        sonata.admin.block.admin_list:
            contexts:  [admin]
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text: # used to if you plan to use Sonata user routes

sonata_user:
    #security_acl: true # Uncomment for ACL support
    manager_type: orm  # can be orm or mongodb
    admin:                  # Admin Classes
        user:
          class:          Application\Sonata\UserBundle\Admin\UserAdmin
          #Sonata\UserBundle\Admin\Entity\UserAdmin
          translation:    SonataUserBundle

sonata_formatter:
    ckeditor:
        templates:
            browser:  'SonataFormatterBundle:Ckeditor:browser.html.twig'
            upload:   'SonataFormatterBundle:Ckeditor:upload.html.twig'
    formatters:
        markdown:
            service: sonata.formatter.text.markdown
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig #keep this commented unless you are using media bundle.
        text:
            service: sonata.formatter.text.text
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig
        rawhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig
        richhtml:
            service: sonata.formatter.text.raw
            extensions:
                - sonata.formatter.twig.control_flow
                - sonata.formatter.twig.gist
        #        - sonata.media.formatter.twig
        twig:
            service: sonata.formatter.text.twigengine
            extensions: [] # Twig formatter cannot have extensions

fos_user:
    db_driver:          orm # can be orm or odm
    firewall_name:      main
    user_class:         Application\Sonata\UserBundle\Entity\User
    service:
        mailer: nix_mailer_service
    from_email:
        address:      "%fos_user_address%"
        sender_name:  "%fos_user_sender_name%"
    registration:
        confirmation:
            enabled: true

    group:
        group_class:    Application\Sonata\UserBundle\Entity\Group
        group_manager:  sonata.user.orm.group_manager

    service:
        user_manager:   sonata.user.orm.user_manager

hwi_oauth:
    #this is my custom user provider, created from FOSUBUserProvider - will manage the
    #automatic user registration on your site, with data from the provider (facebook. google, etc.)
    #and also, the connecting part (get the token and the user_id)
    connect:
        account_connector: fos_user_provider
    # name of the firewall in which this bundle is active, this setting MUST be set
    firewall_names: [main]
    fosub:
        username_iterations: 30
        properties:
            # these properties will be used/redefined later in the custom FOSUBUserProvider service.
            facebook: facebookId
            google:   googleId
    resource_owners:
        facebook:
            type:                facebook
            client_id:           "%facebook_app_id%"
            client_secret:       "%facebook_app_secret%"
            scope:               ""
        google:
            type:                google
            client_id:           "%google_app_id%"
            client_secret:       "%google_app_secret%"
            scope:               "https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile"
    # here you will add one (or more) configurations for resource owners

doctrine:
    dbal:
        types:
            json:       Sonata\Doctrine\Types\JsonType
    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        entity_managers:
            default:
                auto_mapping: true
